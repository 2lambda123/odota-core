extend /layout
include /mixins/progress_bar

block content
  .row.match-top
    .col-xs-6
      div
        if player.avatar
          a(href=player.profileurl || "#", target="_blank")
            img(style="display:inline-block; margin-right:5px;" src='#{player.avatar}').img-thumbnail
        if player.loccountrycode && constants.countries[player.loccountrycode]
          span: abbr(title=constants.countries[player.loccountrycode].name.common): span.flag-icon(style="margin-right:5px;" class="flag-icon-"+player.loccountrycode.toLowerCase())
        h4(style="word-wrap:break-word;") #{player.personaname || player.account_id}
        h4
          if player.cheese
            div
              i.flaticon-1.small-cheese(style="display:inline-block")
              small(style="margin-left:.5em") x #{' '} #{player.cheese}

    .col-xs-6
      h4
        span.text-primary
          i.fa.fa-trophy
          small(style="margin-left:.5em")
            span.text-success(style="margin:0 4px;") #{(player.win)}
            span -
            span.text-danger(style="margin:0 4px;") #{player.lose}
            span (#{(player.win/player.match_count*100).toFixed(2)}%)
      h4
        span.text-primary
          i.fa.fa-sign-out
          small(style="margin-left:.5em") #{player.abandon_count} abandons
      
  .row.player-tabs(style="margin-top:1em;")
    .col-md-12.table-responsive
      ul.nav.nav-tabs
        each val, key in tabs
          li(class= (route === key ? 'active' : ''))
            if !val.hide
              a(href="/players/#{player.account_id}/" + (key === 'index' ? "" : key) + querystring, class=(val["new-feature"] ? "new-feature" : ""))= val.name
  include /query
  block playercontent

append footer_assets
  script.
    $("#included_account_id").selectize({
        plugins: ['remove_button'],
        create: true,
        maxItems: 10
    });
    $("#with_hero_id").selectize({
        plugins: ['remove_button'],
        sortField: 'text',
        maxItems: 5
    });
    $("#enemy_hero_id").selectize({
        plugins: ['remove_button'],
        sortField: 'text',
        maxItems: 5
    });
    $("#purchased_item").selectize({
        plugins: ['remove_button'],
        sortField: 'text',
        maxItems: 5
    });
    $("#hero_id").selectize({
        plugins: ['remove_button'],
        mode: 'multi',
        sortField: 'text',
        maxItems: 1
    });
    $("#isRadiant").selectize({plugins: ['remove_button'],mode: 'multi',maxItems: 1});
    $("#win").selectize({plugins: ['remove_button'],mode: 'multi',maxItems: 1});
    $("#lane_role").selectize({plugins: ['remove_button'],mode: 'multi',maxItems: 1});
    $("#patch").selectize({plugins: ['remove_button'],mode: 'multi',maxItems: 1});
    $("#game_mode").selectize({plugins: ['remove_button'],mode: 'multi',maxItems: 1});
    $("#lobby_type").selectize({plugins: ['remove_button'],mode: 'multi',maxItems: 1});
    $("#region").selectize({plugins: ['remove_button'],mode: 'multi',maxItems: 1});
    $("#date").selectize({plugins: ['remove_button'],mode: 'multi',maxItems: 1});
    
    $('#matches').dataTable({
        "order": [
                [0, "desc"]
            ],
        info: #{route === "matches"},
        paging: #{route === "matches"},
        pageLength: 20,
        lengthChange: false,
        searching: false,
        "drawCallback":function(){
            formatHtml();
            tooltips();
        },
        columnDefs: [
            {
                "targets": "fromNow",
                render: function(data, type) {
                    if (type === "display") {
                        return moment.unix(data).fromNow();
                    }
                    return data;
                }
            },
            {
                "targets": "seconds",
                render: function(data, type) {
                    if (type === "display") {
                        return formatSeconds(data);
                    }
                    return data;
                }
            }
            ]
    });

    $('#heroes').dataTable({
        info: false,
        "paging": false,
        "searching": false,
        "order": [
            [2, "desc"]
        ],
        "drawCallback":function(){
            tooltips();
        },
        "columnDefs": [{
            targets: "fromNow",
            render: function(data, type) {
                if (type === "display") {
                    if (!Number(data)){
                        return "never";
                    }
                    return moment.unix(data).fromNow();
                }
                return data;
            }
        }]
    });

    $('#teammates').dataTable({
        info: false,
        "paging": false,
        "searching": false,
        "order": [
            [2, "desc"]
        ],
        "drawCallback":function(){
            window.tooltips();
        },
        "columnDefs": [{
            targets: "fromNow",
            render: function(data, type) {
                if (type === "display") {
                    if (!Number(data)){
                        return "never";
                    }
                    return moment.unix(data).fromNow();
                }
                return data;
            }
        }]
    });
    
    var builds = $('#builds').dataTable({
        "searching": false,
        "paging": false,
        "order": [
            [1, "desc"]
        ],
        "drawCallback": function() {
            window.tooltips();
        },
        "columnDefs": [{
            targets: "seconds",
            render: function(data, type) {
                if (type === "display") {
                    return formatSeconds(data);
                }
                return data;
            }
        }]
    });
    
    var accuracy = $('#accuracy').dataTable({
        "searching": false,
        "paging": false,
        "order": [
            [1, "desc"]
        ],
        "drawCallback": function() {
            window.tooltips();
        },
        "columnDefs": []
    });
