extend player

block playercontent
  //pre #{JSON.stringify(player.aggData, null, 2)}
  .row
    .col-md-12
      h3 Items 
        small (#{player.aggData.purchase_time.n} matches)
      table.table#builds
        thead
          tr
            th Item
            th: abbr(title="Number of times this item was built") Built
            th: abbr(title="Number of matches where this item was built") Matches
            th: abbr(title="Number of times this item was used") Uses
            th: abbr(title="Mean number of times this item was used in matches where it was built") Uses/Match
            th.seconds: abbr(title="Mean time this item was built at") Avg Timing
            th: abbr(title="Percentage of matches this item was built in") Build%
            th: abbr(title="Percentage of matches won where this item was built") Win%

        tbody
          each val, key in player.aggData.purchase_time.counts
            - var item = constants.items[key]
            tr 
              td
                if item
                  img.img-small.item(src=item.img, title=key)
                  =item.dname
                else
                  =key
              td=player.aggData.purchase.counts[key]
              td=player.aggData.item_usage.counts[key]
              td=player.aggData.item_uses.counts[key]
              td=player.aggData.item_uses.counts[key] ? (player.aggData.item_uses.counts[key]/player.aggData.item_usage.counts[key]).toFixed(2) : ""
              td=val/player.aggData.purchase.counts[key]
              td
                +progress_bar(player.aggData.item_usage.counts[key],player.aggData.item_usage.n)
              td
                +progress_bar(player.aggData.item_win.counts[key],player.aggData.item_usage.counts[key])

append footer_assets
  script.
    var builds = $('#builds').dataTable({
        //"searching": false,
        //"paging": false,
        "order": [
            [1, "desc"]
        ],
        "drawCallback": function() {
            window.tooltips();
        },
        "columnDefs": [{
            targets: "seconds",
            render: function(data, type) {
                if (type === "display") {
                    return formatSeconds(data);
                }
                return data;
            }
        }]
    });