extend player

block playercontent
    .row
      .col-md-6
        h3 Records
        table.table.table-condensed.table-striped.small
          thead
            tr
              th Stat
              th Hero
              th Record
              th Set
              th Games
              th Total
              th Mean
          tbody
            each v, key in histograms
              if key in player.aggData
                - var val = player.aggData[key]
                - var avg = val.sum/val.n
                tr
                  td: abbr(title=tooltips[key])=key.split("_").map(function(s){ return s.charAt(0).toUpperCase() + s.slice(1)}).join(" ")
                  td
                    - var hero = constants.heroes[val.max_match.hero_id]
                    if hero
                      img.img-sm(src=hero.img, title=hero.localized_name)
                    else
                      val.max_match.hero_id
                  td(class=(key in times ? "format-seconds" : ""), data-format-seconds=val.max) #{val.max}
                  td: a(href=val.max_match.match_id ? "/matches/"+ val.max_match.match_id : "#", title=val.max_match.start_time ? moment.unix(val.max_match.start_time).format("ddd D MMMM YYYY, HH:mm:ss Z") : "") #{val.max_match.start_time ? moment.unix(val.max_match.start_time).fromNow() : "never"}
                  td #{val.n}
                  td(class=(key in times ? "format-seconds" : "format"), data-format-seconds=val.sum) #{val.sum}
                  td(class=(key in times ? "format-seconds" : ""), data-format-seconds=avg) #{avg.toFixed(2)}
                  
      - var counts = {"leaver_status":1,"game_mode":1,"lobby_type":1,"lane_role":1,"region":1,"patch":1}
      .col-md-3
        each val, key in counts
          h3=key.split("_").join(" ")
            small  (#{player.aggData[key].n} matches)
          table.table.table-striped.rankable.small
            thead
              tr
                th Category
                th Matches
                th Win%
            tbody
              each val2, key2 in player.aggData[key].counts
                tr
                  - var obj = {}
                  - obj[key] = key2;
                  td: a(href="/players/"+player.account_id+"/matches?"+qs.stringify(obj))=constants[key] ? (constants[key][key2] ? constants[key][key2].name || constants[key][key2] : JSON.stringify(constants[key])) : key2
                  td.rankable=val2
                  td.rankable
                    +progress_bar(player.aggData[key].win_counts[key2], val2)
                    
      .col-md-3
        h3 Multi Kills 
          small (#{player.aggData.multi_kills.n} matches)
        table.table.table-striped.rankable.small
          thead
            tr
              th Type
              th Count
          tbody
            each val, key in constants.multi_kills
              tr
                td #{val} (#{key})
                td.rankable=player.aggData.multi_kills.counts[key] || 0
        h3 Kill Streaks         
          small (#{player.aggData.kill_streaks.n} matches)        
        table.table.table-striped.rankable.small 
          thead        
            tr        
              th Type        
              th Count        
          tbody        
            each val, key in constants.kill_streaks        
              tr        
                td #{val} (#{key})        
                td.rankable=player.aggData.kill_streaks.counts[key] || 0
