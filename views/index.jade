extend layout
  
block content
  .page-header.text-center
    h1(style='font-weight: 700;') YASP 
      small YASP: Another Stats Page
      
  if user
   .row(style="margin-bottom:2em;")
    .col-md-1
      img(src='#{user.avatarmedium}').img-thumbnail
    .col-md-4
      h2
        | Welcome, #{user.personaname}!
    .col-md-7
      .alert.alert-success 
        | Now that you're signed in, we'll automatically parse the replays of matches you play.
        br
        | Visit YASP regularly while signed in to remain a tracked user.
   .row
    .col-md-4
      h3 Preferences
      .checkbox
        label
         if user.dark_theme
           input#dark(type="checkbox", checked="true")
         else
           input#dark(type="checkbox")
         | Use Dark Theme
    .col-md-4
      h3 Status
      div(class=user.full_history_time ? "alert alert-success" : "alert alert-danger")
        span(class= user.full_history_time ? "glyphicon glyphicon-ok" : "glyphicon glyphicon-remove")
        =" Full History: " + (user.full_history_time || "never")
      div(class=user.last_summaries_update ? "alert alert-success" : "alert alert-danger")
        span(class= user.last_summaries_update ? "glyphicon glyphicon-ok" : "glyphicon glyphicon-remove")
        =" Name Update:  "+ (moment(user.last_summaries_update).fromNow() || "never")
      div(class= (user.account_id in ratingPlayers) ? "alert alert-success" : "alert alert-danger")
        span(class= (user.account_id in ratingPlayers) ? "glyphicon glyphicon-ok" : "glyphicon glyphicon-remove")
        =" Rating Tracker "
    .col-md-4
      h3 Actions
      p: a.btn.btn-success(href="/players/"+user.account_id) My Profile &raquo;
      p: a.btn.btn-primary(href="/upload") Upload/Request &raquo;
      p: a.btn.btn-warning(href="steam://friends/add/"+bots[0].steamID) Add Tracker (requires Steam) &raquo;
      p: a.btn.btn-danger(href="/logout") Logout &raquo;
   .row
    .col-md-12
      h3 Rating Tracker (alpha)
      p=JSON.stringify(ratings)
   script.
    var $dark = $("#dark");
    $dark.change(function() {
        console.log($dark.is(":checked"));
        $.post(
            "/preferences", {
                dark: $dark.is(":checked")
            },
            function(data) {
                if (data.sync) {
                    location.reload(true);
                }
                else {
                    $(".page-header").after("<div role='alert' class='sync alert alert-warning'>Failed to update preferences. Try again later.</div>");
                }
                $(".sync").fadeOut(3000);
            });
    });

  else
    .text-center
      p.lead Free Dota 2 replay parsing.
      p
        a(href='/login')
          img(src='http://steamcommunity-a.akamaihd.net/public/images/signinthroughsteam/sits_large_border.png')
      hr
      .row
        .col-md-4
          p.lead Go beyond the API.
          span.glyphicon.glyphicon-stats.big
          p.text-left YASP parses replays to provide Dota 2 match statistics not available through the API or game client.
          p: a.btn.btn-success(href="/matches/1191329057/details") Check out an example &raquo;
        .col-md-4
          p.lead Free of charge.
          span.glyphicon.glyphicon-thumbs-up.big
          p.text-left YASP is supported by volunteer developers and community contributions, making it free for users.
          p: a.btn.btn-primary(href="/about") Learn about YASP &raquo;
        .col-md-4
          p.lead Open source.
          span.glyphicon.glyphicon-wrench.big
          p.text-left All of YASP's code is open source and available for contributors to improve and modify.
          p: a.btn.btn-warning(href="https://github.com/yasp-dota/yasp") Examine the source &raquo;
